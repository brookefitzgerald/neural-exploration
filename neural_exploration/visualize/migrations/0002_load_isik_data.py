# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2017-11-13 17:15
from __future__ import unicode_literals
import environ
import numpy as np
from os import listdir
from scipy.io import loadmat

from django.db import migrations


def col_to_str_row(array):
    return str(np.round([item[0] for item in array]))


def forwards_func(apps, schema_editor):
    db_alias = schema_editor.connection.alias
    Experiment = apps.get_model("visualize", "Experiment")
    isik_experiment = Experiment(
        slug="isik_26",
        name="Isik 26 Letter MEG Data",
        index_stimulus_shown=233,
        description="The Isik 26 letter MEG dataset was collected by Leyl\
            a Isik in Tommy Poggioâ€™s lab and the MEG Lab at the McGovern Inst\
            itute at MIT. The data consists of 306 channel (comprised of 102 \
            magentometers, and 204 planar gradiometers) MEG recordings from a\
            n Elekta Neuromag Triux Scanner. One subject was shown 26 black, \
            upper-case letters, on a white background, while their neural res\
            ponse was recorded in the MEG scanner. Each letter was presented \
            approximately 50 times.",
    )
    Experiment.objects.using(db_alias).bulk_create([isik_experiment])
    Site = apps.get_model("visualize", "Site")
    Data = apps.get_model("visualize", "Data")
    Metadata = apps.get_model("visualize", "Metadata")
    isik_data_directory = str(environ.Path().path('neural_exploration',
                                                  'visualize',
                                                  'migrations',
                                                  'isik_data'))
    for mat_file in listdir(isik_data_directory):
        mat_data = loadmat(isik_data_directory + '/' + mat_file)

        data = mat_data['raster_data']
        labels = mat_data['raster_labels'][0][0][0]
        metadata_variables = mat_data['raster_site_info'][0].dtype.names
        metadata_values = [
            val[0] if len(val) == 1 else col_to_str_row(val)
            for val in mat_data['raster_site_info'][0][0]
        ]

        metadata = zip(metadata_variables, metadata_values)
        site_slug = mat_file[7:12]
        isik_site = Site(slug=site_slug, experiment=isik_experiment)
        Site.objects.using(db_alias).bulk_create([isik_site])

        Metadata.objects.using(db_alias).bulk_create([
            Metadata(
                site=isik_site,
                information_variable=var,
                information_value=val) for (var, val) in metadata
        ])
        Data.objects.using(db_alias).bulk_create([
            Data(
                experiment=isik_experiment,
                site=isik_site,
                trial_number=trial_number,
                label_one=labels[trial_number],
                data=data[trial_number, :].tolist())
            for trial_number in range(data.shape[0])
        ])


class Migration(migrations.Migration):
    initial = False

    dependencies = [
        ('visualize', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(forwards_func),
    ]
